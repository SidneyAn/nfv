#
# Copyright (c) 2015-2016 Wind River Systems, Inc.
#
# SPDX-License-Identifier: Apache-2.0
#
---
logs:
  - name: Host State Change
    type: nfv_vim_host_nfvi_state_change
    file: _host.py
    regex: "Host State-Change detected: nfvi_admin_state=(.*)
    host_admin_state=(.*), nfvi_oper_state=(.*) host_oper_state=(.*),
    nfvi_avail_state=(.*) host_avail_status=(.*), locking=(.*)
    unlocking=(.*) fsm current_state=(.*) for (.*)."
    fields:
      - nfvi_admin_state
      - host_admin_state
      - nfvi_oper_state
      - host_oper_state
      - nfvi_avail_state
      - host_avail_status
      - locking
      - unlocking
      - fsm_current_state
      - host_name

  - name: Host Configure State
    type: nfv_vim_host_configure_state
    file: _host_state_configure.py
    regex: "Entering state \\(configure\\) for (.*)."
    fields:
      - host_name

  - name: Host Enabling State
    type: nfv_vim_host_enabling_state
    file: _host_state_enabling.py
    regex: "Entering state \\(enabling\\) for (.*)."
    fields:
      - host_name

  - name: Host Enabled State
    type: nfv_vim_host_enabled_state
    file: _host_state_enabled.py
    regex: "Entering state \\(enabled\\) for (.*)."
    fields:
      - host_name

  - name: Host Disabling State
    type: nfv_vim_host_disabling_state
    file: _host_state_disabling.py
    regex: "Entering state \\(disabling\\) for (.*)."
    fields:
      - host_name

  - name: Host Disabled State
    type: nfv_vim_host_disabled_state
    file: _host_state_disabled.py
    regex: "Entering state \\(disabled\\) for (.*)."
    fields:
      - host_name

  - name: Host Disabling Failed State
    type: nfv_vim_host_disabling_failed_state
    file: _host_state_disabling_failed.py
    regex: "Entering state \\(disabling-failed\\) for (.*)."
    fields:
      - host_name

  - name: Host Deleting State
    type: nfv_vim_host_deleting_state
    file: _host_state_deleting.py
    regex: "Entering state \\(deleting\\) for (.*)."
    fields:
      - host_name

  - name: Host Deleted State
    type: nfv_vim_host_deleted_state
    file: _host_state_deleted.py
    regex: "Entering state \\(deleted\\) for (.*)."
    fields:
      - host_name

  - name: Instance Director Evacuate Failed
    type: nfv_vim_director_evacuate_failed
    file: _instance_director.py
    regex: "Evacuate of instance (.*) from host (.*) failed."
    fields:
      - instance_name
      - host_name

  - name: Instance Director Evacuate Timeout
    type: nfv_vim_director_evacuate_timeout
    file: _instance_director.py
    regex: "Evacuate of instance (.*) from host (.*) timed out."
    fields:
      - instance_name
      - host_name

  - name: Instance Director Evacuate Success
    type: nfv_vim_director_evacuate_success
    file: _instance_director.py
    regex: "Evacuate of instance (.*) from host (.*) succeeded."
    fields:
      - instance_name
      - host_name

  - name: Instance Director Migrate Failed
    type: nfv_vim_director_migrate_failed
    file: _instance_director.py
    regex: "Migrate of instance (.*) from host (.*) failed."
    fields:
      - instance_name
      - host_name

  - name: Instance Director Migrate Timeout
    type: nfv_vim_director_migrate_timeout
    file: _instance_director.py
    regex: "Migrate of instance (.*) from host (.*) timed out."
    fields:
      - instance_name
      - host_name

  - name: Instance Director Migrate Success
    type: nfv_vim_director_migrate_success
    file: _instance_director.py
    regex: "Migrate of instance (.*) from host (.*) succeeded."
    fields:
      - instance_name
      - host_name

  - name: Instance Initial State
    type: nfv_vim_instance_initial_state
    file: _instance_state_initial.py
    regex: "Entering state \\(initial\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Live-Migrate State
    type: nfv_vim_instance_live_migrate_state
    file: _instance_state_live_migrate.py
    regex: "Entering state \\(live-migrate\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Live-Migrate State
    type: nfv_vim_instance_live_migrate_state
    file: _instance_state_live_migrate.py
    regex: "Entering state \\(live-migrate\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Live-Migrate State Failed
    type: nfv_vim_instance_live_migrate_state_failed
    file: _instance_state_live_migrate.py
    regex: "Live-Migrate failed for (.*)."
    fields:
      - instance_name

  - name: Instance Live-Migrate State Timed out
    type: nfv_vim_instance_live_migrate_state_timed_out
    file: _instance_state_live_migrate.py
    regex: "Live-Migrate timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Live-Migrate Finish State
    type: nfv_vim_instance_live_migrate_finish_state
    file: _instance_state_live_migrate_finish.py
    regex: "Entering state \\(live-migrate-finish\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Live-Migrate Finish State Failed
    type: nfv_vim_instance_live_migrate_finish_state_failed
    file: _instance_state_live_migrate_finish.py
    regex: "Live-Migrate-Finish failed for (.*)."
    fields:
      - instance_name

  - name: Instance Live-Migrate Finish State Timed out
    type: nfv_vim_instance_live_migrate_finish_state_timed_out
    file: _instance_state_live_migrate_finish.py
    regex: "Live-Migrate-Finish timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Cold-Migrate State
    type: nfv_vim_instance_cold_migrate_state
    file: _instance_state_cold_migrate.py
    regex: "Entering state \\(cold-migrate\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Cold-Migrate State Failed
    type: nfv_vim_instance_cold_migrate_state_failed
    file: _instance_state_cold_migrate.py
    regex: "Cold-Migrate failed for (.*)."
    fields:
      - instance_name

  - name: Instance Cold-Migrate State Timed out
    type: nfv_vim_instance_cold_migrate_state_timed_out
    file: _instance_state_cold_migrate.py
    regex: "Cold-Migrate timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Cold-Migrate Confirm State
    type: nfv_vim_instance_cold_migrate_confirm_state
    file: _instance_state_cold_migrate_confirm.py
    regex: "Entering state \\(cold-migrate-confirm\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Cold-Migrate Confirm State Failed
    type: nfv_vim_instance_cold_migrate_confirm_state_failed
    file: _instance_state_cold_migrate_confirm.py
    regex: "Cold-Migrate-Confirm failed for (.*)."
    fields:
      - instance_name

  - name: Instance Cold-Migrate Confirm State Timed out
    type: nfv_vim_instance_cold_migrate_confirm_state_timed_out
    file: _instance_state_cold_migrate_confirm.py
    regex: "Cold-Migrate-Confirm timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Cold-Migrate Revert State
    type: nfv_vim_instance_cold_migrate_revert_state
    file: _instance_state_cold_migrate_revert.py
    regex: "Entering state \\(cold-migrate-revert\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Cold-Migrate Revert State Failed
    type: nfv_vim_instance_cold_migrate_revert_state_failed
    file: _instance_state_cold_migrate_revert.py
    regex: "Cold-Migrate-Revert failed for (.*)."
    fields:
      - instance_name

  - name: Instance Cold-Migrate Revert State Timed out
    type: nfv_vim_instance_cold_migrate_revert_state_timed_out
    file: _instance_state_cold_migrate_revert.py
    regex: "Cold-Migrate-Revert timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Evacuate State
    type: nfv_vim_instance_evacuate_state
    file: _instance_state_evacuate.py
    regex: "Entering state \\(evacuate\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Start State
    type: nfv_vim_instance_start_state
    file: _instance_state_start.py
    regex: "Entering state \\(start\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Start State Inprogress
    type: nfv_vim_instance_start_state_inprogress
    file: _instance_state_start.py
    regex: "Start inprogress for (.*)."
    fields:
      - instance_name

  - name: Instance Start State Failed
    type: nfv_vim_instance_start_state_failed
    file: _instance_state_start.py
    regex: "Start failed for (.*)."
    fields:
      - instance_name

  - name: Instance Start State Timed out
    type: nfv_vim_instance_start_state_timed_out
    file: _instance_state_start.py
    regex: "Start timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Stop State
    type: nfv_vim_instance_stop_state
    file: _instance_state_stop.py
    regex: "Entering state \\(stop\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Stop State Completed
    type: nfv_vim_instance_stop_state_completed
    file: _instance_state_stop.py
    regex: "Stop completed for (.*)."
    fields:
      - instance_name

  - name: Instance Stop State Failed
    type: nfv_vim_instance_stop_state_failed
    file: _instance_state_stop.py
    regex: "Stop failed for (.*)."
    fields:
      - instance_name

  - name: Instance Stop State Timed out
    type: nfv_vim_instance_stop_state_timed_out
    file: _instance_state_stop.py
    regex: "Stop timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Pause State
    type: nfv_vim_instance_pause_state
    file: _instance_state_pause.py
    regex: "Entering state \\(pause\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Pause State Completed
    type: nfv_vim_instance_pause_state_completed
    file: _instance_state_pause.py
    regex: "Pause completed for (.*)."
    fields:
      - instance_name

  - name: Instance Pause State Failed
    type: nfv_vim_instance_pause_state_failed
    file: _instance_state_pause.py
    regex: "Pause failed for (.*)."
    fields:
      - instance_name

  - name: Instance Pause State Timed out
    type: nfv_vim_instance_pause_state_timed_out
    file: _instance_state_pause.py
    regex: "Pause timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Unpause State
    type: nfv_vim_instance_unpause_state
    file: _instance_state_unpause.py
    regex: "Entering state \\(unpause\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Unpause State Completed
    type: nfv_vim_instance_unpause_state_completed
    file: _instance_state_unpause.py
    regex: "Unpause completed for (.*)."
    fields:
      - instance_name

  - name: Instance Unpause State Failed
    type: nfv_vim_instance_unpause_state_failed
    file: _instance_state_unpause.py
    regex: "Unpause failed for (.*)."
    fields:
      - instance_name

  - name: Instance Unpause State Timed out
    type: nfv_vim_instance_unpause_state_timed_out
    file: _instance_state_unpause.py
    regex: "Unpause timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Suspend State
    type: nfv_vim_instance_suspend_state
    file: _instance_state_suspend.py
    regex: "Entering state \\(suspend\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Suspend State Completed
    type: nfv_vim_instance_suspend_state_completed
    file: _instance_state_suspend.py
    regex: "Suspend completed for (.*)."
    fields:
      - instance_name

  - name: Instance Suspend State Failed
    type: nfv_vim_instance_suspend_state_failed
    file: _instance_state_suspend.py
    regex: "Suspend failed for (.*)."
    fields:
      - instance_name

  - name: Instance Suspend State Timed out
    type: nfv_vim_instance_suspend_state_timed_out
    file: _instance_state_suspend.py
    regex: "Suspend timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Resume State
    type: nfv_vim_instance_resume_state
    file: _instance_state_resume.py
    regex: "Entering state \\(resume\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Resume State Completed
    type: nfv_vim_instance_resume_state_completed
    file: _instance_state_resume.py
    regex: "Resume completed for (.*)."
    fields:
      - instance_name

  - name: Instance Resume State Failed
    type: nfv_vim_instance_resume_state_failed
    file: _instance_state_resume.py
    regex: "Resume failed for (.*)."
    fields:
      - instance_name

  - name: Instance Resume State Timed out
    type: nfv_vim_instance_resume_state_timed_out
    file: _instance_state_resume.py
    regex: "Resume timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Reboot State
    type: nfv_vim_instance_reboot_state
    file: _instance_state_reboot.py
    regex: "Entering state \\(reboot\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Reboot State Completed
    type: nfv_vim_instance_reboot_state_completed
    file: _instance_state_reboot.py
    regex: "Reboot completed for (.*)."
    fields:
      - instance_name

  - name: Instance Reboot State Failed
    type: nfv_vim_instance_reboot_state_failed
    file: _instance_state_reboot.py
    regex: "Reboot failed for (.*)."
    fields:
      - instance_name

  - name: Instance Reboot State Timed out
    type: nfv_vim_instance_reboot_state_timed_out
    file: _instance_state_reboot.py
    regex: "Reboot timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Rebuild State
    type: nfv_vim_instance_rebuild_state
    file: _instance_state_rebuild.py
    regex: "Entering state \\(rebuild\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Rebuild State Completed
    type: nfv_vim_instance_rebuild_state_completed
    file: _instance_state_rebuild.py
    regex: "Rebuild completed for (.*)."
    fields:
      - instance_name

  - name: Instance Rebuild State Failed
    type: nfv_vim_instance_rebuild_state_failed
    file: _instance_state_rebuild.py
    regex: "Rebuild failed for (.*)."
    fields:
      - instance_name

  - name: Instance Rebuild State Timed out
    type: nfv_vim_instance_rebuild_state_timed_out
    file: _instance_state_rebuild.py
    regex: "Rebuild timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Fail State
    type: nfv_vim_instance_fail_state
    file: _instance_state_fail.py
    regex: "Entering state \\(fail\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Delete State
    type: nfv_vim_instance_delete_state
    file: _instance_state_delete.py
    regex: "Entering state \\(delete\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Resize State
    type: nfv_vim_instance_resize_state
    file: _instance_state_resize.py
    regex: "Entering state \\(resize\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Resize State Failed
    type: nfv_vim_instance_resize_state_failed
    file: _instance_state_resize.py
    regex: "Resize failed for (.*)."
    fields:
      - instance_name

  - name: Instance Resize State Timed out
    type: nfv_vim_instance_resize_state_timed_out
    file: _instance_state_resize.py
    regex: "Reisze timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Resize-Confirm State
    type: nfv_vim_instance_resize_confirm_state
    file: _instance_state_resize_confirm.py
    regex: "Entering state \\(resize-confirm\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Resize Confirm State Failed
    type: nfv_vim_instance_resize_confirm_state_failed
    file: _instance_state_resize_confirm.py
    regex: "Resize-Confirm failed for (.*)."
    fields:
      - instance_name

  - name: Instance Resize Confirm State Timed out
    type: nfv_vim_instance_resize_confirm_state_timed_out
    file: _instance_state_resize_confirm.py
    regex: "Reisze-Confirm timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Resize-Revert State
    type: nfv_vim_instance_resize_revert_state
    file: _instance_state_resize_revert.py
    regex: "Entering state \\(resize-revert\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Resize Revert State Failed
    type: nfv_vim_instance_resize_revert_state_failed
    file: _instance_state_resize_revert.py
    regex: "Resize-Revert failed for (.*)."
    fields:
      - instance_name

  - name: Instance Resize Revert State Timed out
    type: nfv_vim_instance_resize_revert_state_timed_out
    file: _instance_state_resize_revert.py
    regex: "Reisze-Revert timed out for (.*)."
    fields:
      - instance_name

  - name: Instance Guest-Services-Create State
    type: nfv_vim_instance_guest_services_create_state
    file: _instance_state_guest_services_create.py
    regex: "Entering state \\(guest-services-create\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Guest-Services-Delete State
    type: nfv_vim_instance_guest_services_delete_state
    file: _instance_state_guest_services_delete.py
    regex: "Entering state \\(guest-services-delete\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Guest-Services-Enable State
    type: nfv_vim_instance_guest_services_enable_state
    file: _instance_state_guest_services_enable.py
    regex: "Entering state \\(guest-services-enable\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Guest-Services-Disable State
    type: nfv_vim_instance_guest_services_disable_state
    file: _instance_state_guest_services_disable.py
    regex: "Entering state \\(guest-services-disable\\) for (.*)."
    fields:
      - instance_name

  - name: Instance Guest-Services-Set State
    type: nfv_vim_instance_guest_services_set_state
    file: _instance_state_guest_services_set.py
    regex: "Entering state \\(guest-services-set\\) for (.*)."
    fields:
      - instance_name

  - name: Instance NFVI Action Initial
    type: nfv_vim_instance_nfvi_action_initial
    file: _vim_nfvi_events.py
    regex: "Instance action, uuid=(.*), nfvi_action_data=Instance action,
    type=(.*), params=(.*), state=initial, reason="
    fields:
      - instance_uuid
      - action_type
      - action_params

  - name: Instance NFVI State Change
    type: nfv_vim_instance_nfvi_state_change
    file: _vim_nfvi_events.py
    regex: "Instance state-change, nfvi_instance={'instance_type': ({.*}),
    'name': u'(.*)', 'tenant_id': '(.*)', 'avail_status': \\[(.*)], 'nfvi_data':
    {'vm_state': u'(.*)', 'task_state': u?'(.*)', 'power_state': '(.*)'},
    'live_migration_support': (.*), 'oper_state': '(.*)', 'host_name': u'(.*)',
    'admin_state': '(.*)', 'action': '(.*)', 'image_uuid': (.*),
    'uuid': u'(.*)'}."
    fields:
      - instance_type
      - instance_name
      - tenant_uuid
      - instance_avail_status
      - nfvi_vm_state
      - nfvi_task_state
      - nfvi_power_state
      - live_migrate_support
      - instance_oper_state
      - host_name
      - instance_admin_state
      - instance_action_state
      - image_uuid
      - instance_uuid

  - name: Instance Start Callback
    type: nfv_vim_instance_start_callback
    file: _instance_task_work.py
    regex: "Start-Instance callback for (.*), response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Stop Callback
    type: nfv_vim_instance_stop_callback
    file: _instance_task_work.py
    regex: "Stop-Instance callback for (.*), response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Pause Callback
    type: nfv_vim_instance_pause_callback
    file: _instance_task_work.py
    regex: "Pause-Instance callback for (.*), response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Unpause Callback
    type: nfv_vim_instance_unpause_callback
    file: _instance_task_work.py
    regex: "Unpause-Instance callback for (.*), response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Suspend Callback
    type: nfv_vim_instance_suspend_callback
    file: _instance_task_work.py
    regex: "Suspend-Instance callback for (.*), response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Resume Callback
    type: nfv_vim_instance_resume_callback
    file: _instance_task_work.py
    regex: "Resume-Instance callback for (.*), response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Reboot Callback
    type: nfv_vim_instance_reboot_callback
    file: _instance_task_work.py
    regex: "Reboot-Instance callback for (.*), response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Rebuild Callback
    type: nfv_vim_instance_rebuild_callback
    file: _instance_task_work.py
    regex: "Rebuild-Instance callback for (.*), response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Live-Migrate Callback
    type: nfv_vim_instance_live_migrate_callback
    file: _instance_task_work.py
    regex: "Live-Migrate-Instance callback for (.*),
    response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Cold-Migrate Callback
    type: nfv_vim_instance_cold_migrate_callback
    file: _instance_task_work.py
    regex: "Cold-Migrate-Instance callback for (.*),
    response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Cold-Migrate Confirm Callback
    type: nfv_vim_instance_cold_migrate_confirm_callback
    file: _instance_task_work.py
    regex: "Cold-Migrate-Confirm-Instance callback for (.*),
    response={'completed': (.*), 'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Cold-Migrate Revert Callback
    type: nfv_vim_instance_cold_migrate_revert_callback
    file: _instance_task_work.py
    regex: "Cold-Migrate-Revert-Instance callback for (.*),
    response={'completed': (.*), 'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Resize Callback
    type: nfv_vim_instance_resize_callback
    file: _instance_task_work.py
    regex: "Resize-Instance callback for (.*), response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Resize Confirm Callback
    type: nfv_vim_instance_resize_confirm_callback
    file: _instance_task_work.py
    regex: "Resize-Confirm-Instance callback for (.*),
    response={'completed': (.*), 'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Resize Revert Callback
    type: nfv_vim_instance_resize_revert_callback
    file: _instance_task_work.py
    regex: "Resize-Revert-Instance callback for (.*),
    response={'completed': (.*),
    'reason': (.*)}."
    fields:
      - instance_name
      - completed
      - reason

  - name: Instance Guest Services Notify
    type: nfv_vim_instance_guest_services_notify
    file: _vim_nfvi_events.py
    regex: "Guest-Services state notify, instance_uuid=(.*), host_name=(.*)
    guest_services=\\[{'admin_state': '(.*)', 'restart_timeout': (.*),
    'oper_state': '(.*)', 'name': '(.*)'}]."
    fields:
      - instance_uuid
      - host_name
      - service_admin_state
      - restart_timeout
      - service_oper_state
      - service_name

  - name: Instance Guest Services Enable
    type: nfv_vim_instance_guest_services_enable
    file: _instance_task_work.py
    regex: "Guest-Services-Enable for (.*),
    nfvi_guest_services=\\[{'admin_state':
    '(.*)', 'service': '(.*)'}]."
    fields:
      - instance_name
      - service_admin_state
      - service_name

  - name: Instance Guest Services Enable Callback
    type: nfv_vim_instance_guest_services_enable_callback
    file: _instance_task_work.py
    regex: "Guest-Services-Enable callback for (.*),
    response={'completed': (.*),
    'reason': (.*), 'result-data': {'instance_uuid': u'(.*)', 'services':
    \\[{'admin_state': '(.*)', 'restart_timeout': (.*), 'oper_state': '(.*)',
    'name': '(.*)'}], 'host_name': u'(.*)'}}."
    fields:
      - instance_name
      - completed
      - reason
      - instance_uuid
      - service_admin_state
      - restart_timeout
      - service_oper_state
      - service_name
      - host_name

  - name: Instance Guest Services Disable
    type: nfv_vim_instance_guest_services_disable
    file: _instance_task_work.py
    regex: "Guest-Services-Disable for (.*),
    nfvi_guest_services=\\[{'admin_state':
    '(.*)', 'service': '(.*)'}]."
    fields:
      - instance_name
      - service_admin_state
      - service_name

  - name: Instance Guest Services Disable Callback
    type: nfv_vim_instance_guest_services_disable_callback
    file: _instance_task_work.py
    regex: "Guest-Services-Disable callback for (.*),
    response={'completed': (.*),
    'reason': (.*), 'result-data': {'instance_uuid': u'(.*)', 'services':
    \\[{'admin_state': '(.*)', 'restart_timeout': (.*), 'oper_state': '(.*)',
    'name': '(.*)'}], 'host_name': u'(.*)'}}."
    fields:
      - instance_name
      - completed
      - reason
      - instance_uuid
      - service_admin_state
      - restart_timeout
      - service_oper_state
      - service_name
      - host_name

  - name: Instance Guest Services Vote
    type: nfv_vim_instance_guest_services_vote
    file: _instance_task_work.py
    regex: "Guest-Services-Vote for (.*), action_type=(.*)."
    fields:
      - instance_name
      - action_type

  - name: Instance Guest Services Vote Result
    type: nfv_vim_instance_guest_services_vote_result
    file: _instance_task_work.py
    regex: "Guest-Services-Vote for (.*), vote=(.*)."
    fields:
      - instance_name
      - vote_result

  - name: Instance Guest Services Vote Callback
    type: nfv_vim_instance_guest_services_vote_callback
    file: _instance_task_work.py
    regex: "Guest-Services-Vote callback for (.*),
    response={'action-type': u'(.*)',
    'uuid': u'(.*)', 'completed': (.*), 'reason': (.*), 'host-name': u'(.*)',
    'timeout': (.*)}."
    fields:
      - instance_name
      - action_type
      - instance_uuid
      - completed
      - reason
      - host_name
      - timeout

  - name: Instance Guest Services Pre-Notify
    type: nfv_vim_instance_guest_services_pre_notify
    file: _instance_task_work.py
    regex: "Guest-Services-Pre-Notify for (.*), action_type=(.*)."
    fields:
      - instance_name
      - action_type

  - name: Instance Guest Services Pre-Notify Callback
    type: nfv_vim_instance_guest_services_pre_notify_callback
    file: _instance_task_work.py
    regex: "Guest-Services-Pre-Notify callback for (.*),
    response={'action-type': u'(.*)', 'uuid': u'(.*)', 'completed': (.*),
    'reason': (.*), 'host-name': u'(.*)', 'timeout': (.*)}."
    fields:
      - instance_name
      - action_type
      - instance_uuid
      - completed
      - reason
      - host_name
      - timeout

  - name: Instance Guest Services Post-Notify
    type: nfv_vim_instance_guest_services_post_notify
    file: _instance_task_work.py
    regex: "Guest-Services-Post-Notify for (.*), action_type=(.*)."
    fields:
      - instance_name
      - action_type

  - name: Instance Guest Services Post-Notify Callback
    type: nfv_vim_instance_guest_services_post_notify_callback
    file: _instance_task_work.py
    regex: "Guest-Services-Post-Notify callback for (.*),
     response={'action-type': u'(.*)', 'uuid': u'(.*)', 'completed': (.*),
     'reason': (.*), 'host-name': u'(.*)', 'timeout': (.*)}."
    fields:
      - instance_name
      - action_type
      - instance_uuid
      - completed
      - reason
      - host_name
      - timeout

  - name: Instance Guest Services Post-Notify Heartbeat
    type: nfv_vim_instance_guest_services_post_notify_heartbeat
    file: _instance_task_work.py
    regex: "Guest-Services-Post-Notify for (.*), guest communication
    re-established."
    fields:
      - instance_name
